networks:
  web_net:
    name: web_net
    external: true
  app_net:
    name: app_net
    external: true

volumes:
  gitlab_data:
    name: gitlab_data
  gitlab_config_data:
    name: gitlab_config_data
  gitlab_logs_data:
    name: gitlab_logs_data
  gitlab_backups_data:
    name: gitlab_backups_data

services:
  gitlab:
    image: gitlab/gitlab-ce:${image_tag}
    container_name: gitlab
    hostname: ${gitlab_domain}
    restart: ${restart_policy}
    volumes:
      - gitlab_data:/var/opt/gitlab
      - gitlab_config_data:/etc/gitlab
      - gitlab_logs_data:/var/log/gitlab
      - gitlab_backups_data:/var/opt/gitlab/backups
    environment:
      GITLAB_OMNIBUS_CONFIG: | 
        # Gitlab external domain
        external_url = 'https://${gitlab_domain}'

        # Gitlab Root Password
        gitlab_rails['initial_root_password'] = "${gitlab_root_password}"
        gitlab_rails['display_initial_root_password'] = false
        gitlab_rails['store_initial_root_password'] = false

        # Gitlab disable unused services
        node_exporter['enable'] = false
        redis_exporter['enable'] = false
        postgres_exporter['enable'] = false
        pgbouncer_exporter['enable'] = false
        gitlab_exporter['enable'] = false
        letsencrypt['enable'] = false
        prometheus['enable'] = false
        monitoring_role['enable'] = false
        alertmanager['enable'] = false

        # Gitlab Nginx Config
        nginx['enable'] = true
        nginx['client_max_body_size'] = '250m'
        nginx['redirect_http_to_https'] = false
        nginx['gzip_enabled'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_protocol'] = false

        # Gitlab ban authentication failed
        gitlab_rails['rack_attack_git_basic_auth'] = {
          'enabled' => true,
          'ip_whitelist' => ["127.0.0.1","192.168.110.0/24"],   #change these ips 
          'maxretry' => 10,
          'findtime' => 60,
          'bantime' => 3600
        }

        # Gitlab Backup Settings
        gitlab_rails['manage_backup_path'] = true
        gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"
        gitlab_rails['backup_archive_permissions'] = 0644
        gitlab_rails['backup_keep_time'] = 604800  #7days
        gitlab_rails['env'] = {
            "SKIP" => "registry"
        }
        gitlab_rails['backup_upload_connection'] = {
          'provider' => 'AWS',
          'region' => 'eu-west-1',
          'aws_access_key_id' => '${gitlab_s3_username}',
          'aws_secret_access_key' => '${gitlab_s3_password}',
          'endpoint' => '${gitlab_s3_endpoint}',
          'path_style' => true
        }
        gitlab_rails['backup_upload_remote_directory'] = '${gitlab_s3_bucket}'
        gitlab_rails['backup_multipart_chunk_size'] = 104857600 #100M

         # Settings used by GitLab registry
        registry_external_url 'https://${gitlab_registry_domain}'
        registry_nginx['enable'] = true
        registry_nginx['listen_port'] = 5001
        registry_nginx['listen_https'] = false
        registry_nginx['proxy_set_headers'] = {
          "Host" => "$$http_host",
          "X-Real-IP" => "$$remote_addr",
          "X-Forwarded-For" => "$$proxy_add_x_forwarded_for",
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }

        # GitLab email server settings
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "smtp.gmail.com"
        gitlab_rails['smtp_port'] = 587
        gitlab_rails['smtp_user_name'] = "${smtp_username}"
        gitlab_rails['smtp_password'] = "${smtp_password}"
        gitlab_rails['smtp_domain'] = "smtp.gmail.com"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'

        # Set the sender's email address
        gitlab_rails['gitlab_email_from'] = 'gitlab@${gitlab_domain}'
        gitlab_rails['gitlab_email_display_name'] = 'GitLab'
        gitlab_rails['gitlab_email_reply_to'] = 'noreply@${gitlab_domain}'

    networks:
      - web_net
      - app_net
    ports:
      - "22:22"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"

      # git (port 80)
      - "traefik.http.routers.http-git.entrypoints=web"
      - "traefik.http.routers.http-git.rule=Host(`${gitlab_domain}`)"
      - "traefik.http.routers.http-reg.middlewares=https-redirect@docker"
      - "traefik.http.routers.https-git.entrypoints=web-secure"
      - "traefik.http.routers.https-git.rule=Host(`${gitlab_domain}`)"
      - "traefik.http.routers.https-git.tls=true"
      - "traefik.http.routers.https-git.tls.certresolver=traefikcerts"
      - "traefik.http.routers.https-git.service=https-git"
      - "traefik.http.services.https-git.loadbalancer.server.port=80"

      # repo (port 5001)
      - "traefik.http.routers.http-reg.entrypoints=web"
      - "traefik.http.routers.http-reg.rule=Host(`${gitlab_registry_domain}`)"
      - "traefik.http.routers.http-reg.middlewares=https-redirect@docker"
      - "traefik.http.routers.https-reg.entrypoints=web-secure"
      - "traefik.http.routers.https-reg.rule=Host(`${gitlab_registry_domain}`)"
      - "traefik.http.routers.https-reg.tls=true"
      - "traefik.http.routers.https-reg.tls.certresolver=traefikcerts"
      - "traefik.http.routers.https-reg.service=https-reg"
      - "traefik.http.services.https-reg.loadbalancer.server.port=5001"
