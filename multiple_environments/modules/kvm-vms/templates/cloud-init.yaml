#cloud-config

hostname: ${hostname}
fqdn: ${hostname}.${environment}.local
manage_etc_hosts: true

bootcmd:
  - [ bash, -c, "sed -i 's/^#\\?Port 22/Port ${ssh_port}/' /etc/ssh/sshd_config" ]

users:
  - name: ${username}
    groups: sudo
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh_authorized_keys:
      - ${ssh_keys}
    lock_passwd: false
    # Set the password for the user
    passwd: ${password}
    chpasswd: { expire: false }
  
  - name: root
    shell: /bin/bash
    ssh_authorized_keys:
      - ${ssh_keys}

ssh_pwauth: true
disable_root: true
# ssh:
#   port: 8822

timezone: ${timezone}

package_update: true
package_upgrade: false

# Install basic packages
packages:
%{ for package in packages ~}
  - ${package}
%{ endfor ~}
  - python3
  - python3-pip

# Write environment-specific files
write_files:
  - path: /etc/environment-info
    content: |
      ENVIRONMENT=${environment}
      HOSTNAME=${hostname}
      PROVISIONED_DATE=$(date -Iseconds)
    permissions: '0644'
  - path: /etc/motd
    content: |
      
      ====================================
      Welcome to ${hostname}
      Environment: ${environment}
      Provisioned: $(date)
      ====================================
      
    permissions: '0644'

runcmd:
  # System services
  - systemctl enable qemu-guest-agent
  - systemctl start qemu-guest-agent
  - systemctl enable ssh
  - systemctl start ssh
  
  # Update package list
  - apt-get update
  
  # Install Ansible dependencies
  - pip3 install --upgrade pip
  
  # Environment-specific configurations
  - echo "Environment: ${environment}" >> /etc/issue
  - echo "Hostname: ${hostname}" >> /etc/issue
  
  # Set hostname properly
  - hostnamectl set-hostname ${hostname}
  
  # Final status
  - echo "Cloud-init completed for ${hostname} in ${environment} environment at $(date)" > /tmp/cloud-init-done

growpart:
  mode: auto
  devices: ['/']
  ignore_growroot_disabled: false

resize_rootfs: true

final_message: "VM ${hostname} in ${environment} environment is ready! Configure disks with Ansible."